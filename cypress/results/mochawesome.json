{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2023-04-03T05:47:59.998Z",
    "end": "2023-04-03T05:48:02.816Z",
    "duration": 2818,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "82187643-d527-4aaa-8113-0fc09b8f3cf3",
      "title": "",
      "fullFile": "cypress\\e2e\\apitests.cy.js",
      "file": "cypress\\e2e\\apitests.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2face34f-1f21-4034-b915-7ed969b9a19d",
          "title": "API Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET - Retrieve All Users",
              "fullTitle": "API Tests GET - Retrieve All Users",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', '/users').should(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.length(10);\n  expect(response.body[0]).to.have.property('name', 'Leanne Graham');\n});",
              "err": {},
              "uuid": "12d1f8be-e915-4e01-8d2e-fdcdeb4887d9",
              "parentUUID": "2face34f-1f21-4034-b915-7ed969b9a19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - Create a New Post",
              "fullTitle": "API Tests POST - Create a New Post",
              "timedOut": null,
              "duration": 236,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newPost = {\n  title: 'New Post Title',\n  body: 'New post body content',\n  userId: 1\n};\ncy.request({\n  method: 'POST',\n  url: '/posts',\n  body: newPost\n}).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body.title).to.eq(newPost.title);\n  expect(response.body.body).to.eq(newPost.body);\n  expect(response.body.userId).to.eq(newPost.userId);\n});",
              "err": {},
              "uuid": "2a3fe864-2c39-43b1-a18a-dec0b1a583b1",
              "parentUUID": "2face34f-1f21-4034-b915-7ed969b9a19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update an Existing Post",
              "fullTitle": "API Tests PUT - Update an Existing Post",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updatedPost = {\n  id: 1,\n  title: 'Updated Post Title',\n  body: 'Updated post body content',\n  userId: 1\n};\ncy.request({\n  method: 'PUT',\n  url: '/posts/1',\n  body: updatedPost\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.title).to.eq(updatedPost.title);\n  expect(response.body.body).to.eq(updatedPost.body);\n  expect(response.body.userId).to.eq(updatedPost.userId);\n});",
              "err": {},
              "uuid": "be24e669-9384-420f-b766-f4e5c5555ca8",
              "parentUUID": "2face34f-1f21-4034-b915-7ed969b9a19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Delete an Existing Post",
              "fullTitle": "API Tests DELETE - Delete an Existing Post",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: '/posts/1'\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "e0710a73-cd6b-464b-9603-21b6ca346ca1",
              "parentUUID": "2face34f-1f21-4034-b915-7ed969b9a19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Retrieve All Comments for a Post",
              "fullTitle": "API Tests GET - Retrieve All Comments for a Post",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/posts/1/comments').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.length(5);\n});",
              "err": {},
              "uuid": "dff3ce20-ee93-4185-bdcc-0b69ea216686",
              "parentUUID": "2face34f-1f21-4034-b915-7ed969b9a19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Retrieve a Specific Comment",
              "fullTitle": "API Tests GET - Retrieve a Specific Comment",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/comments/1').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.email).to.eq('Eliseo@gardner.biz');\n});",
              "err": {},
              "uuid": "7fd0e8d2-953e-4f46-bbed-c551615a5f97",
              "parentUUID": "2face34f-1f21-4034-b915-7ed969b9a19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Retrieve All Albums for a User",
              "fullTitle": "API Tests GET - Retrieve All Albums for a User",
              "timedOut": null,
              "duration": 230,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/users/1/albums').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.length(10);\n});",
              "err": {},
              "uuid": "f7dc0e75-ceb3-43b6-a10c-4cc3dab23bbb",
              "parentUUID": "2face34f-1f21-4034-b915-7ed969b9a19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Retrieve a Specific Photo",
              "fullTitle": "API Tests GET - Retrieve a Specific Photo",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/photos/1').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.title).to.eq('accusamus beatae ad facilis cum similique qui sunt');\n});",
              "err": {},
              "uuid": "aa8111ae-c68a-4bd5-8b53-2162039ce16a",
              "parentUUID": "2face34f-1f21-4034-b915-7ed969b9a19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - Create a New User",
              "fullTitle": "API Tests POST - Create a New User",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n  name: 'John Doe',\n  username: 'johndoe',\n  email: 'johndoe@example.com',\n  phone: '123-456-7890',\n  website: 'johndoe.com'\n};\ncy.request({\n  method: 'POST',\n  url: '/users',\n  body: newUser\n}).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body.name).to.eq(newUser.name);\n  expect(response.body.username).to.eq(newUser.username);\n  expect(response.body.email).to.eq(newUser.email);\n  expect(response.body.phone).to.eq(newUser.phone);\n  expect(response.body.website).to.eq(newUser.website);\n});",
              "err": {},
              "uuid": "5b0ccbf5-f3f0-47bd-b0d5-f0abfbffb5fe",
              "parentUUID": "2face34f-1f21-4034-b915-7ed969b9a19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update an Existing User",
              "fullTitle": "API Tests PUT - Update an Existing User",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updatedUser = {\n  id: 1,\n  name: 'Jane Doe',\n  username: 'janedoe',\n  email: 'janedoe@example.com',\n  phone: '123-456-7890',\n  website: 'janedoe.com'\n};\ncy.request({\n  method: 'PUT',\n  url: '/users/1',\n  body: updatedUser\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.name).to.eq(updatedUser.name);\n  expect(response.body.username).to.eq(updatedUser.username);\n  expect(response.body.email).to.eq(updatedUser.email);\n  expect(response.body.phone).to.eq(updatedUser.phone);\n  expect(response.body.website).to.eq(updatedUser.website);\n});",
              "err": {},
              "uuid": "dfff6dbe-ef54-46e8-b027-cc7e0b24feab",
              "parentUUID": "2face34f-1f21-4034-b915-7ed969b9a19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Delete an Existing User",
              "fullTitle": "API Tests DELETE - Delete an Existing User",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: '/users/1'\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "1e0c5e57-3589-44cd-beda-effd1a6b1b88",
              "parentUUID": "2face34f-1f21-4034-b915-7ed969b9a19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Retrieve All Todos for a User",
              "fullTitle": "API Tests GET - Retrieve All Todos for a User",
              "timedOut": null,
              "duration": 281,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/users/1/todos').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.length(20);\n});",
              "err": {},
              "uuid": "a32a3cba-ec70-4c98-8210-7da7eb6d0af2",
              "parentUUID": "2face34f-1f21-4034-b915-7ed969b9a19d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12d1f8be-e915-4e01-8d2e-fdcdeb4887d9",
            "2a3fe864-2c39-43b1-a18a-dec0b1a583b1",
            "be24e669-9384-420f-b766-f4e5c5555ca8",
            "e0710a73-cd6b-464b-9603-21b6ca346ca1",
            "dff3ce20-ee93-4185-bdcc-0b69ea216686",
            "7fd0e8d2-953e-4f46-bbed-c551615a5f97",
            "f7dc0e75-ceb3-43b6-a10c-4cc3dab23bbb",
            "aa8111ae-c68a-4bd5-8b53-2162039ce16a",
            "5b0ccbf5-f3f0-47bd-b0d5-f0abfbffb5fe",
            "dfff6dbe-ef54-46e8-b027-cc7e0b24feab",
            "1e0c5e57-3589-44cd-beda-effd1a6b1b88",
            "a32a3cba-ec70-4c98-8210-7da7eb6d0af2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2735,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results/",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}